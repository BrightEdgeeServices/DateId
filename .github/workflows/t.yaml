name: Build-and-Publish-to-PyPI

on:
  push:
    branches:
      - main
      - master
  # or
  # workflow_dispatch:
  #   # if you want manual runs

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    # 1. The key: ensure you have id-token: write so OIDC can work
    permissions:
      contents: write
      id-token: write

    steps:
      # 2. Check out your code
      - name: Check out repository
        uses: actions/checkout@v4

      # 3. Set up Python (match your projectâ€™s Python version)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 4. Install Poetry & dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install

      # 5. Build your package (creates ./dist/)
      - name: Build package
        run: |
          poetry build
          ls -la dist  # Just to verify the artifacts exist

      # 6. Publish to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}  # or your PyPI API token
          packages_dir: dist
          # skip_existing: false    # optional, default: false
          # verify_metadata: true   # optional, default: true
          # attestations: true      # optional, default: false
